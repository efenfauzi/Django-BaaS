version: 2 # use CircleCI 2.0
jobs: # A basic unit of work in a run
  build: # runs not using Workflows must have a `build` job as entry point
    # directory where steps are run
    working_directory: ~/user/local/src/pypure
    docker: # run the steps with Docker
      # CircleCI Python images available at: https://hub.docker.com/r/circleci/python/
      - image: circleci/python:3.7.3-browsers
        environment: # environment variables for primary container
          PIPENV_VENV_IN_PROJECT: true
          DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
      # CircleCI PostgreSQL images available at: https://hub.docker.com/r/circleci/postgres/
      - image: circleci/postgres:11.2-alpine
        environment: # environment variables for the Postgres container.
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
#      - restore_cache:
#      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
#          name: Restore Pip Package Cache
#          keys:
#          - v1-dependencies-{{ checksum "requirements.txt" }}
#          - v1-dependencies-
      - run:
          name: Install Pip Dependencies
          command: |
            pip install -r requirements.test.txt
            pip install -r requirements.txt
      - save_cache:
          name: Save Pip Package Cache
          key: v1-dependencies-{{ checksum "requirements.txt" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.7/site-packages"
      - run:
          name: Run Testing
          # pipenv run python manage.py test
          command: |
            python manage.py test
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test-results
      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: test-results
          destination: tr1
      - run:
          name: Run Testing For Coverage Report
          command: |
            coverage run --source='.' manage.py test
      - run:
          command: |
            codecov
